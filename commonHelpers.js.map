{"version":3,"file":"commonHelpers.js","sources":["../src/main.js"],"sourcesContent":["import iziToast from \"izitoast\";\nimport \"izitoast/dist/css/iziToast.min.css\";\nimport SimpleLightbox from \"simplelightbox\";\nimport \"simplelightbox/dist/simple-lightbox.min.css\";\n\n\n\nconst BASE_URL = \"https://pixabay.com/api/\";\nconst API_KEY = \"41633959-4ab3a3c79df0d7e6ffc2251eb\";\n\nconst form = document.querySelector(\".form\");\nconst photoContainer = document.querySelector(\".photo-container\");\nconst loader = document.querySelector(\".loader\");\n\nlet gallery;\n\nconst getBaseUrl = () => {\n    const url = new URL(BASE_URL);\n    url.searchParams.append(\"key\", API_KEY);\n    url.searchParams.append(\"image_type\", \"photo\");\n    url.searchParams.append(\"orientation\", \"horizontal\");\n    url.searchParams.append(\"safesearch\", \"true\");\n\n    return url;\n};\n\nform.addEventListener(\"submit\", (event) => {\n    event.preventDefault();\n\n    const query = event.currentTarget.elements[0].value;\n\n    if (query.length < 4) {\n        alert(\"Sorry, Yours length is not enough. Min 4 letters.\");\n    } else {\n        loader.style.display = \"block\";\n\n        try {\n            renderPhoto(query.toLowerCase());\n        } catch (error) {\n            console.error(error);\n        }\n    }\n});\n\nconst getPhoto = (query = \"\") => {\n    const url = getBaseUrl();\n    url.searchParams.append(\"q\", query);\n\n    return fetch(url)\n        .then((response) => {\n            if (response.ok) {\n                return response.json();\n            } else {\n                throw new Error(\"Request is not okay\");\n            }\n        });\n};\n\nconst renderPhoto = (query) => {\n    getPhoto(query)\n        .then((images) => {\n\n            if (images.hits.length === 0) {\n                iziToast.error({\n                    message: 'Sorry, there are no images matching your search query. Please try again!',\n                    position: 'topRight'\n                });\n                loader.style.display = \"none\";\n                return;\n            }\n\n            const photoList = images.hits.reduce((html, hit, index) => {\n                return html +\n                    `<div class=\"photo-card\">\n                        <div class=\"photo\">\n                            <a href=\"${hit.largeImageURL}\" data-lightbox=\"gallery-${index}\">\n                                <img src=\"${hit.webformatURL}\" alt=\"${hit.tags}\" width=\"360\" height=\"200\" />\n                            </a>\n                        </div>\n                        <div class=\"info-container\">\n                            <div class=\"label-value\">\n                                <div class=\"label-likes\">Likes</div>\n                                <div class=\"value\">${hit.likes}</div>\n                            </div>\n                            <div class=\"label-value\">\n                                <div class=\"label-likes\">Views</div>\n                                <div class=\"value\">${hit.views}</div>\n                            </div>\n                            <div class=\"label-value\">\n                                <div class=\"label-likes\">Comments</div>\n                                <div class=\"value\">${hit.comments}</div>\n                            </div>\n                            <div class=\"label-value\">\n                                <div class=\"label-likes\">Downloads</div>\n                                <div class=\"value\">${hit.downloads}</div>\n                            </div>\n                        </div>\n                    </div>`;\n            }, '');\n\n            photoContainer.innerHTML = photoList;\n\n            loader.style.display = \"none\";\n\n            gallery = new SimpleLightbox('.photo a', {\n                captionsData: 'alt',\n                captionPosition: 'bottom',\n                captionDelay: 250,\n            });\n            gallery.refresh();\n        })\n        .catch((error) => {\n            console.error(error);\n        });\n};\n"],"names":["BASE_URL","API_KEY","form","photoContainer","loader","gallery","getBaseUrl","url","event","query","renderPhoto","error","getPhoto","response","images","iziToast","photoList","html","hit","index","SimpleLightbox"],"mappings":"6vBAOA,MAAMA,EAAW,2BACXC,EAAU,qCAEVC,EAAO,SAAS,cAAc,OAAO,EACrCC,EAAiB,SAAS,cAAc,kBAAkB,EAC1DC,EAAS,SAAS,cAAc,SAAS,EAE/C,IAAIC,EAEJ,MAAMC,EAAa,IAAM,CACrB,MAAMC,EAAM,IAAI,IAAIP,CAAQ,EAC5B,OAAAO,EAAI,aAAa,OAAO,MAAON,CAAO,EACtCM,EAAI,aAAa,OAAO,aAAc,OAAO,EAC7CA,EAAI,aAAa,OAAO,cAAe,YAAY,EACnDA,EAAI,aAAa,OAAO,aAAc,MAAM,EAErCA,CACX,EAEAL,EAAK,iBAAiB,SAAWM,GAAU,CACvCA,EAAM,eAAc,EAEpB,MAAMC,EAAQD,EAAM,cAAc,SAAS,GAAG,MAE9C,GAAIC,EAAM,OAAS,EACf,MAAM,mDAAmD,MACtD,CACHL,EAAO,MAAM,QAAU,QAEvB,GAAI,CACAM,EAAYD,EAAM,YAAW,CAAE,CAClC,OAAQE,EAAP,CACE,QAAQ,MAAMA,CAAK,CACtB,CACJ,CACL,CAAC,EAED,MAAMC,EAAW,CAACH,EAAQ,KAAO,CAC7B,MAAMF,EAAMD,IACZ,OAAAC,EAAI,aAAa,OAAO,IAAKE,CAAK,EAE3B,MAAMF,CAAG,EACX,KAAMM,GAAa,CAChB,GAAIA,EAAS,GACT,OAAOA,EAAS,OAEhB,MAAM,IAAI,MAAM,qBAAqB,CAErD,CAAS,CACT,EAEMH,EAAeD,GAAU,CAC3BG,EAASH,CAAK,EACT,KAAMK,GAAW,CAEd,GAAIA,EAAO,KAAK,SAAW,EAAG,CAC1BC,EAAS,MAAM,CACX,QAAS,2EACT,SAAU,UAC9B,CAAiB,EACDX,EAAO,MAAM,QAAU,OACvB,MACH,CAED,MAAMY,EAAYF,EAAO,KAAK,OAAO,CAACG,EAAMC,EAAKC,IACtCF,EACH;AAAA;AAAA,uCAEmBC,EAAI,yCAAyCC;AAAA,4CACxCD,EAAI,sBAAsBA,EAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qDAMrBA,EAAI;AAAA;AAAA;AAAA;AAAA,qDAIJA,EAAI;AAAA;AAAA;AAAA;AAAA,qDAIJA,EAAI;AAAA;AAAA;AAAA;AAAA,qDAIJA,EAAI;AAAA;AAAA;AAAA,4BAI1C,EAAE,EAELf,EAAe,UAAYa,EAE3BZ,EAAO,MAAM,QAAU,OAEvBC,EAAU,IAAIe,EAAe,WAAY,CACrC,aAAc,MACd,gBAAiB,SACjB,aAAc,GAC9B,CAAa,EACDf,EAAQ,QAAO,CAC3B,CAAS,EACA,MAAOM,GAAU,CACd,QAAQ,MAAMA,CAAK,CAC/B,CAAS,CACT"}